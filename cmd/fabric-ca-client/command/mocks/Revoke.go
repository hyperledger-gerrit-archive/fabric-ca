// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import api "github.com/hyperledger/fabric-ca/api"

import idemixapi "github.com/hyperledger/fabric-ca/lib/common/idemix/api"
import mock "github.com/stretchr/testify/mock"

// Revoke is an autogenerated mock type for the Revoke type
type Revoke struct {
	mock.Mock
}

// RevokeAll provides a mock function with given fields: _a0
func (_m *Revoke) RevokeAll(_a0 *api.RevocationRequest) (*api.AllRevocationResponse, error) {
	ret := _m.Called(_a0)

	var r0 *api.AllRevocationResponse
	if rf, ok := ret.Get(0).(func(*api.RevocationRequest) *api.AllRevocationResponse); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.AllRevocationResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*api.RevocationRequest) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RevokeIdemix provides a mock function with given fields: _a0
func (_m *Revoke) RevokeIdemix(_a0 *api.RevocationRequest) (*idemixapi.RevocationResponse, error) {
	ret := _m.Called(_a0)

	var r0 *idemixapi.RevocationResponse
	if rf, ok := ret.Get(0).(func(*api.RevocationRequest) *idemixapi.RevocationResponse); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*idemixapi.RevocationResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*api.RevocationRequest) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
