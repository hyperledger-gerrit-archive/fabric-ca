/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/
// Code generated by mockery v1.0.0

package mocks

import FP256BN "github.com/hyperledger/fabric-amcl/amcl/FP256BN"
import amcl "github.com/hyperledger/fabric-amcl/amcl"
import fabricidemix "github.com/hyperledger/fabric/idemix"

import mock "github.com/stretchr/testify/mock"

// Lib is an autogenerated mock type for the Lib type
type Lib struct {
	mock.Mock
}

// GetRand provides a mock function with given fields:
func (_m *Lib) GetRand() (*amcl.RAND, error) {
	ret := _m.Called()

	var r0 *amcl.RAND
	if rf, ok := ret.Get(0).(func() *amcl.RAND); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*amcl.RAND)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCredential provides a mock function with given fields: key, m, attrs, rng
func (_m *Lib) NewCredential(key *fabricidemix.IssuerKey, m *fabricidemix.CredRequest, attrs []*FP256BN.BIG, rng *amcl.RAND) (*fabricidemix.Credential, error) {
	ret := _m.Called(key, m, attrs, rng)

	var r0 *fabricidemix.Credential
	if rf, ok := ret.Get(0).(func(*fabricidemix.IssuerKey, *fabricidemix.CredRequest, []*FP256BN.BIG, *amcl.RAND) *fabricidemix.Credential); ok {
		r0 = rf(key, m, attrs, rng)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*fabricidemix.Credential)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*fabricidemix.IssuerKey, *fabricidemix.CredRequest, []*FP256BN.BIG, *amcl.RAND) error); ok {
		r1 = rf(key, m, attrs, rng)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIssuerKey provides a mock function with given fields: AttributeNames, rng
func (_m *Lib) NewIssuerKey(AttributeNames []string, rng *amcl.RAND) (*fabricidemix.IssuerKey, error) {
	ret := _m.Called(AttributeNames, rng)

	var r0 *fabricidemix.IssuerKey
	if rf, ok := ret.Get(0).(func([]string, *amcl.RAND) *fabricidemix.IssuerKey); ok {
		r0 = rf(AttributeNames, rng)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*fabricidemix.IssuerKey)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]string, *amcl.RAND) error); ok {
		r1 = rf(AttributeNames, rng)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RandModOrder provides a mock function with given fields: rng
func (_m *Lib) RandModOrder(rng *amcl.RAND) *FP256BN.BIG {
	ret := _m.Called(rng)

	var r0 *FP256BN.BIG
	if rf, ok := ret.Get(0).(func(*amcl.RAND) *FP256BN.BIG); ok {
		r0 = rf(rng)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*FP256BN.BIG)
		}
	}

	return r0
}
