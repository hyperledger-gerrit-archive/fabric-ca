/*
Copyright IBM Corp. 2016 All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

                 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by mockery v1.0.0

package mocks

import dbutil "github.com/hyperledger/fabric-ca/lib/dbutil"
import lib "github.com/hyperledger/fabric-ca/lib"
import mock "github.com/stretchr/testify/mock"

// FabricCA is an autogenerated mock type for the FabricCA type
type FabricCA struct {
	mock.Mock
}

// DB provides a mock function with given fields:
func (_m *FabricCA) DB() dbutil.FabricCADB {
	ret := _m.Called()

	var r0 dbutil.FabricCADB
	if rf, ok := ret.Get(0).(func() dbutil.FabricCADB); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(dbutil.FabricCADB)
		}
	}

	return r0
}

// FillCAInfo provides a mock function with given fields: resp
func (_m *FabricCA) FillCAInfo(resp *lib.ServerInfoResponseNet) error {
	ret := _m.Called(resp)

	var r0 error
	if rf, ok := ret.Get(0).(func(*lib.ServerInfoResponseNet) error); ok {
		r0 = rf(resp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetConfig provides a mock function with given fields:
func (_m *FabricCA) GetConfig() *lib.CAConfig {
	ret := _m.Called()

	var r0 *lib.CAConfig
	if rf, ok := ret.Get(0).(func() *lib.CAConfig); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*lib.CAConfig)
		}
	}

	return r0
}
