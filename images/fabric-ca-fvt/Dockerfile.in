FROM hyperledger/fabric-baseimage:_BASE_TAG_

ENV PATH="/usr/local/go/bin/:${PATH}" \
    GOPATH="/opt/gopath" \
    PGDATA="/usr/local/pgsql/data/" \
    PGUSER="postgres" \
    PGPASSWORD="postgres" \
    PGVER=_PGVER_ \
    HOSTADDR="127.0.0.1" \
    LDAPPORT="389" \
    LDAPUSER="admin" \
    LDAPPASWD="adminpw" \
    FABRIC_CA_DATA=/etc/hyperledger/fabric-ca \
    TLS_BUNDLE=FabricTlsPkiBundle.pem \
    TLS_SERVER_CERT=FabricTlsServerEEcert.pem \
    TLS_SERVER_KEY=FabricTlsServerEEkey.pem \
    MYSQLDATA=/var/lib/mysql

# setup scripts for slapd, postgres, mysql, and openssl
ADD payload/fabric-ca-fvt.tar.bz2 $FABRIC_CA_DATA
RUN chmod 600 $FABRIC_CA_DATA/tls_client-key.pem
RUN chmod 600 $FABRIC_CA_DATA/tls_server-key.pem

# Avoid ERROR:
#   invoke-rc.d: policy-rc.d denied execution of start.
RUN echo "#!/bin/sh\nexit 0" > /usr/sbin/policy-rc.d

# Update system
RUN apt-get -y update && apt-get -y install --no-install-recommends locales
RUN sed -i -e 's/^[[:blank:]]*#[[:blank:]]*en_US.UTF-8[[:blank:]]*UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
RUN printf "LANG=en_US.UTF-8\nLANGUAGE=en_US.UTF-8\n" > /etc/default/locale
RUN dpkg-reconfigure locales && update-locale LANG=en_US.UTF-8

# Install more test depedencies
RUN echo "mysql-server mysql-server/root_password password mysql" | debconf-set-selections
RUN echo "mysql-server mysql-server/root_password_again password mysql" | debconf-set-selections
RUN apt-get -y install --no-install-recommends bc vim lsof sqlite3 haproxy postgresql-$PGVER \
                       postgresql-client-common postgresql-contrib-$PGVER isag jq git html2text \
                       debconf-utils zsh htop python2.7-minimal libpython2.7-stdlib \
                       mysql-client  mysql-common mysql-server 
RUN apt-get -y install ssl-cert
RUN apt-get -y autoremove


# Configure and start postgres
RUN echo $PGUSER:$PGUSER | chpasswd
RUN mkdir -p $PGDATA && chown postgres:postgres $PGDATA
RUN su $PGUSER -c "/usr/lib/postgresql/$PGVER/bin/initdb -D $PGDATA"
RUN su $PGUSER -c "/usr/lib/postgresql/$PGVER/bin/pg_ctl start -D $PGDATA" &&\
                   sleep 10 &&\
                   psql -U postgres -h localhost -c "ALTER USER $PGUSER WITH PASSWORD '$PGPASSWORD';" &&\
                   su postgres -c "/usr/lib/postgresql/$PGVER/bin/pg_ctl stop"
RUN echo "host all  all    0.0.0.0/0  trust" >> ${PGDATA}/pg_hba.conf
RUN echo "listen_addresses='*'" >> ${PGDATA}/postgresql.conf
# Enable TLS for postgres
RUN cp $FABRIC_CA_DATA/root.pem $PGDATA
RUN cp $FABRIC_CA_DATA/tls_server*.pem $PGDATA
# postgres insists on restricted access to keys
RUN chown $PGUSER.$PGUSER $PGDATA/*pem
RUN chmod 600 $PGDATA/tls_server*.pem
RUN sed -i "s/\(^[[:blank:]]*\)#*\([[:blank:]]*ssl[[:blank:]]*=[[:blank:]]*\).*/\1\2on/;\
s/\(^[[:blank:]]*\)#*\([[:blank:]]*ssl_cert_file[[:blank:]]*=[[:blank:]]*\).*/\1\2'tls_server-cert.pem'/;\
s/\(^[[:blank:]]*\)#*\([[:blank:]]*ssl_key_file[[:blank:]]*=[[:blank:]]*\).*/\1\2'tls_server-key.pem'/;\
s/\(^[[:blank:]]*\)#*\([[:blank:]]*ssl_ca_file[[:blank:]]*=[[:blank:]]*\).*/\1\2'root.pem'/" $PGDATA/postgresql.conf
=======
RUN chmod +x $FABRIC_CA_DATA/*.sh
# postgres is sensitive to overly broad permissions
RUN $FABRIC_CA_DATA/tls_pki.sh && chmod 600 $FABRIC_CA_DATA/*key*.pem
>>>>>>> d7780d3... [ FAB-3982 ] TLS certificate for fabric-ca tests

RUN $FABRIC_CA_DATA/system_update.sh
RUN $FABRIC_CA_DATA/postgres_setup.sh
RUN $FABRIC_CA_DATA/slapd_setup.sh
RUN $FABRIC_CA_DATA/mysql_setup.sh

# Install fabric-ca dependencies
RUN go get github.com/go-sql-driver/mysql
RUN go get github.com/lib/pq

# Add docker-built execs for (potentially) alternative architecture
COPY payload/fabric-ca-client payload/fabric-ca-server /usr/local/bin/
RUN chmod +x /usr/local/bin/fabric-ca-client /usr/local/bin/fabric-ca-server

WORKDIR ${GOPATH}/src/github.com/hyperledger/fabric-ca
RUN cp $FABRIC_CA_DATA/start.sh /
ENTRYPOINT [ "/start.sh" ]
CMD ["make", "fvt-tests"]
